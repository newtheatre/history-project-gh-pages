{"version":3,"file":"search_worker.js","sources":["search_worker.coffee"],"names":[],"mappings":"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","sourcesContent":["# Imports\nimportScripts('/lib/lunr.js/lunr.min.js')\n\n# Functions\ngetJSON = (url, successHandler, errorHandler) ->\n  xhr = new XMLHttpRequest()\n  xhr.open('get', url, true)\n  xhr.responseType = 'json'\n  xhr.onload = ->\n    if (xhr.status)\n      successHandler && successHandler(xhr.response)\n    else\n      errorHandler && errorHandler(xhr.status)\n  xhr.send()\n\n# SearchWorker class\nclass SearchWorker\n  constructor: (opts) ->\n    @indexUrl = opts.indexUrl\n    @dataUrl = opts.dataUrl\n\n    @searchIndex = null\n    @dataIndex = null\n    @dataReverseIndex = null\n\n    @loadIndex()\n    @loadData()\n\n  loadIndex: ->\n    getJSON @indexUrl, (data) =>\n      @processIndex(data)\n    , @fail\n\n  loadData: ->\n    getJSON @dataUrl, (data) =>\n      @processData(data)\n    , @fail\n\n  processIndex: (data) ->\n    @searchIndex = lunr.Index.load(data)\n    @ready()\n\n  processData: (data) ->\n    @dataIndex = data\n    @dataReverseIndex = new Object\n    for item in data\n      @dataReverseIndex[item.url] = item\n    @ready()\n\n  ready: ->\n    # Two concurent operations, only fire when both ready\n    if @searchIndex? and @dataReverseIndex?\n      self.postMessage\n        cmd: 'ready'\n\n  fail: (status) ->\n    console.log (\"SearchWorker load error: #{status}\")\n\n  search: (query) ->\n    indexResults = @searchIndex.search(query)\n\n    # Map index results to data results\n    dataResults = Array()\n    for ir in indexResults\n      dataResults.push @dataReverseIndex[ir.ref]\n\n    # Sort the results array\n    dataResults.sort (a,b) ->\n      a = \"#{a.surname} #{a.forename}\".toLowerCase()\n      b = \"#{b.surname} #{b.forename}\".toLowerCase()\n      return +(a > b) || +(a == b) - 1\n\n    return {\n      cmd: 'results'\n      results: dataResults\n    }\n\n# Define worker pointer\nself.searchWorker = null\n\n# Worker bindings\nself.addEventListener 'message', (e) ->\n  data = e.data\n  switch (data.cmd)\n    when 'init'\n      self.searchWorker = new SearchWorker\n        indexUrl: data.indexUrl\n        dataUrl: data.dataUrl\n    when 'search'\n      results = self.searchWorker.search(data.query)\n      self.postMessage(results)\n    when 'stop'\n      delete self.searchWorker\n      self.close()\n"]}